<?xml version="1.0"?>
<project name="webMethods" default="run-all-tests" basedir="." xmlns:wm="antlib:com.sag.wm.ant.tasks" xmlns:antcontrib="antlib:net.sf.antcontrib" xmlns:antunit="antlib:org.apache.ant.antunit" xmlns:xmltask="antlib:com.oopsconsultancy.xmltask">
	
	<description>Build and Test Script for WM Java and XML Tests</description>
	
	<!-- SET THE GLOBAL PROPERTIES -->

	<property name="test.project.dir" location="." />

	
	<property name="webMethods_home" location="." />
	
	<!-- LOAD CUSTOM PROPERTIES FOR THIS TEST RUN -->
	<property file="setup.properties" />
 
	<!-- XML TEST Properties -->
	<property name="resource.dir" location="${test.project.dir}/resources" />
	<property name="test.xml.dir" location="${test.project.dir}/resources/test/xml" />
	<property name="resources.folder" location="${resource.dir}"/>
	<property name="test.reports.dir" location="${resource.dir}/reports" />
	
	<!-- Java Test Properties -->
	<property name="test.source.dir" location="${test.project.dir}/resources/test/java" />
	<property name="test.build.dir" location="${test.project.dir}/resources/classes" />
	
	<property name="javac.debug" value="true" />
	<property name="build.javac.target" value="1.6" />
	

	<!-- SETUP CLASSPATHS AND OTHER REFERENCES -->

	<path id="classpath.all">
		    <fileset dir="${test.project.dir}/lib">
		    	<include name="ant/*.jar" />
		    	<include name="ant/ext/*.jar" />
		    	<include name="*.jar" />	  
		    </fileset>
	</path>

	<target name="validate-configuration">
		<antunit:assertTrue message="Ant 1.7 is the minimum required to run this build.">
			<matches string="${ant.version}">
				<regexp pattern="[vV]ersion\s+((1\.[7-9])|([2-9]))" />
			</matches>
		</antunit:assertTrue>

		<antunit:assertTrue message="Java 1.5 is required to run this build.">
			<matches string="${java.version}">
				<regexp pattern="(1\.[5-9])|(^[2-9])" />
			</matches>
		</antunit:assertTrue>

		<fail message="Property test.project.dir must be defined" unless="test.project.dir" />
	</target>
	
	<target name="check-report-folder" depends="validate-configuration">
		<available property="report.xml.dir.exists" file="${test.reports.dir}" type="dir" />
	</target>

	<target name="init" depends="validate-configuration">
		<!-- create build directories -->
		<mkdir dir="${test.reports.dir}"/>
		<mkdir dir="${test.build.dir}" />
	</target>

	<target name="clean" depends="validate-configuration, check-report-folder" if="report.xml.dir.exists">
		<!-- remove build directories -->
		<delete dir="${test.reports.dir}" quiet="false" />
		<delete dir="${test.build.dir}" quiet="false" />	
	</target>

	<target name="check-test-folder" depends="validate-configuration">
		<available property="test.xml.dir.exists" file="${test.xml.dir}" type="dir" />
	</target>

	<target name="test-and-report-xml" depends="clean, init">
		<mkdir dir="${test.reports.dir}" />
		<antcontrib:for param="test.setup.file" keepgoing="true">
			<path>
				<fileset dir="${test.xml.dir}" includes="**/**/*Test.xml" />
			</path>
			<sequential>
				<basename property="file.basename" file="@{test.setup.file}" suffix=".xml" />
				<echo message="${file.basename}" />
				<junit printsummary="yes" haltonfailure="no" fork="true" failureproperty="test:failure" showoutput="true" dir="${test.project.dir}">
					<jvmarg value="-DwebMethods.integrationServer.name=${webMethods.integrationServer.name}" />
					<jvmarg value="-DwebMethods.integrationServer.port=${webMethods.integrationServer.port}" />
					<jvmarg value="-DwebMethods.integrationServer.userid=${webMethods.integrationServer.userid}" />
					<jvmarg value="-DwebMethods.integrationServer.password=${webMethods.integrationServer.password}" />
					<jvmarg value="-DwebMethods.test.setup.filename=@{test.setup.file}" />
					<jvmarg value="-Dresources.folder=${webMethods.package.dir}" />
					<!--jvmarg value="-Dprofile.name=${profile.name}" /-->
					<classpath>
						<path refid="classpath.all" />
						<pathelement location="${test.build.dir}" />
					</classpath>
					<formatter type="xml" />
					<test name="com.wm.ps.test.WmTestSuite" outfile="TEST-${file.basename}" haltonerror="false" haltonfailure="false" todir="${test.reports.dir}" />
				</junit>
				<replaceregexp file="${test.reports.dir}/TEST-${file.basename}.xml" match=" name=&quot;com.wm.ps.test.WmTestSuite&quot; " replace=" name=&quot;com.wm.ps.test.WmTestSuite [${file.basename}]&quot; " />
				<antcontrib:var name="file.basename" unset="true" />
			</sequential>
		</antcontrib:for>

		<junitreport todir="${test.reports.dir}">
			<fileset dir="${test.reports.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.reports.dir}/html" />
		</junitreport>
		
		<!-- CLEAN UP -->
		<!--delete>
			<fileset dir="${test.reports.dir}">
			  	<include name="TEST*.xml" />
			</fileset>
		</delete-->
		
		<delete>
			<fileset dir="${test.project.dir}">
			  	<include name="junit*.properties" />
			</fileset>
		</delete>
		
		<fail if="test:failure">Unit test failure</fail>
	</target>
	
	<target name="run-test-xml" depends="clean" >
		<antcontrib:for param="test.setup.file" keepgoing="true">
			<path>
				<fileset dir="${test.xml.dir}" includes="**/**/*Test.xml" />
			</path>
			<sequential>
				<junit printsummary="yes" haltonfailure="no" fork="true" failureproperty="test:failure" showoutput="true" dir="${test.project.dir}">
					<jvmarg value="-DwebMethods.integrationServer.name=${webMethods.integrationServer.name}" />
					<jvmarg value="-DwebMethods.integrationServer.port=${webMethods.integrationServer.port}" />
					<jvmarg value="-DwebMethods.integrationServer.userid=${webMethods.integrationServer.userid}" />
					<jvmarg value="-DwebMethods.integrationServer.password=${webMethods.integrationServer.password}" />
					<jvmarg value="-DwebMethods.test.setup.filename=@{test.setup.file}" />
					<jvmarg value="-Dresources.folder=${resources.folder}" />				
					<classpath>
						<path refid="classpath.all" />
						<pathelement location="${test.build.dir}" />
					</classpath>
					<test name="com.wm.ps.test.WmTestSuite" haltonerror="true" haltonfailure="true" />
				</junit>
			</sequential>
		</antcontrib:for>
		
		<!-- CLEAN UP -->
		<delete>
			<fileset dir="${test.project.dir}">
			  	<include name="junit*.properties" />
			</fileset>
		</delete>
				
		<fail if="test:failure">Unit test failure</fail>
	</target>
	

	<target name="compile-test" depends="clean, init">
		<!-- compile source -->
		<javac srcdir="${test.source.dir}" destdir="${test.build.dir}" debug="${javac.debug}" target="${build.javac.target}" source="${build.javac.target}">
			<classpath>
				<path refid="classpath.all" />
			</classpath>
		</javac>
	</target>

	
	
	<target name="run-test-java" depends="compile-test">
		<junit failureproperty="test:failure" showoutput="true" fork="yes" dir="${test.project.dir}">
			<classpath>
				<path refid="classpath.all" />
				<pathelement location="${test.build.dir}" />
			</classpath>
			<batchtest fork="yes" todir="${test.reports.dir}">
				<fileset dir="${test.build.dir}">
					<include name="**/*Test*.class" />
				</fileset>
			</batchtest>
		</junit>

		<!--fail if="test:failure">Unit test failure</fail-->
	</target>
	
	
	<target name="test-and-report-java" depends="compile-test">
			<mkdir dir="${test.reports.dir}" />
			<junit printsummary="yes" haltonfailure="no" failureproperty="test:failure" showoutput="true" dir="${test.project.dir}">
				<jvmarg value="-DwebMethods.integrationServer.name=${webMethods.integrationServer.name}" />
				<jvmarg value="-DwebMethods.integrationServer.port=${webMethods.integrationServer.port}" />
				<jvmarg value="-DwebMethods.integrationServer.userid=${webMethods.integrationServer.userid}" />
				<jvmarg value="-DwebMethods.integrationServer.password=${webMethods.integrationServer.password}" />
				<jvmarg value="-Dresources.folder=${resources.folder}" />
				<jvmarg value="-Dprofile.name=${profile.name}" />
				<classpath>
					<path refid="classpath.all" />
					<pathelement location="${test.build.dir}" />
				</classpath>
				<formatter type="xml" />
				<batchtest fork="yes" todir="${test.reports.dir}">
					<fileset dir="${test.build.dir}">
						<include name="**/*Test*.class" />
					</fileset>
				</batchtest>
			</junit>

			<junitreport todir="${test.reports.dir}">
				<fileset dir="${test.reports.dir}">
					<include name="TEST-*.xml" />
				</fileset>
				<report format="frames" todir="${test.reports.dir}/html" />
			</junitreport>

			<fail if="test:failure">Unit test failure</fail>
		</target>

	<target name="run-and-report-all-tests" depends="test-and-report-xml, test-and-report-java" />
	 
	<target name="run-all-tests" depends="run-test-xml, run-test-java" />
	
	
	<!-- CREATE TASK DEFINITIONS FOR ANT CONTRIB TASKS -->
	<taskdef uri="antlib:net.sf.antcontrib" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
	    	<path refid="classpath.all" />
	  	</classpath>
	</taskdef>

	<!-- CREATE TASK DEFINITIONS FOR ANT UNIT TASKS -->
	<taskdef uri="antlib:org.apache.ant.antunit" resource="org/apache/ant/antunit/antlib.xml">
	  	<classpath>
	    	<path refid="classpath.all" />
	  	</classpath>
	</taskdef>
	
			
</project>